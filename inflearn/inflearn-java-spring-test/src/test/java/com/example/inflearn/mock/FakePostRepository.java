package com.example.inflearn.mock;

import com.example.inflearn.post.domain.Post;
import com.example.inflearn.post.service.port.PostRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

public class FakePostRepository implements PostRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Post> data = new ArrayList<>();

    @Override
    public Optional<Post> findById(Long id) {
        return data.stream().filter(item -> Objects.equals(item.getId(), id))
                .findFirst();
    }

    @Override
    public Post save(Post post) {
        if (Objects.isNull(post.getId())) {
            final Post createPost = Post.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .content(post.getContent())
                    .createdAt(post.getCreatedAt())
                    .writer(post.getWriter())
                    .build();
            data.add(createPost);
            return createPost;
        } else {
            data.removeIf(item -> Objects.equals(item.getId(), post.getId()));
            data.add(post);
            return post;
        }
    }
}
