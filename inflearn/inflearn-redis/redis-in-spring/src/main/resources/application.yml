# local 환경
spring:
  profiles:
    default: local
  datasource:
    url: jdbc:mysql://localhost:3306/mydb
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  docker:
    compose:
      file: classpath:compose.yml
  data:
    redis:
      host: localhost
      port: 6379

logging:
  level:
    org.springframework.cache: trace # Redis 사용에 대한 로그가 조회되도록 설정

---
# prod 환경
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://${rdsAddress}:3306/mydb
    username: admin
    password: password

---
# local-docker 환경
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:mysql://redis-mysql:3306/mydb
    username: root
    password: root
  data:
    redis:
      host: cache-server
      port: 6379

---
# prod-docker 환경
spring:
  config:
    activate:
      on-profile: prod-docker
  datasource:
    url: jdbc:mysql://${rdsAddress}:3306/mydb
    username: admin
    password: password
  data:
    redis:
      host: cache-server
      port: 6379
---
spring:
  config:
    activate:
      on-profile: elasticache
  data:
    redis:
      host: ${elasticacheAddress}
      port: 6379
